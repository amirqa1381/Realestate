# Generated by Django 5.1.2 on 2024-11-06 10:13

import django.core.validators
import django.db.models.deletion
import repair.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Mechanic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mechanical_engineering_code', models.CharField(max_length=12, verbose_name='Mechanical_code')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created_at')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mechanic', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.TextField(verbose_name='Issue')),
                ('repair_code', models.IntegerField(default=repair.models.create_repair_code, verbose_name='Repair Code')),
                ('tax', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tax')),
                ('repair_price', models.FloatField(blank=True, null=True, verbose_name='Final Price')),
                ('request_of_repair', models.DateField(auto_now_add=True, verbose_name='Request of Repair')),
                ('repair_done_time', models.DateField(blank=True, null=True, verbose_name='Repair Done Time')),
                ('home', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='home_repair', to='main.home', verbose_name='Home')),
            ],
        ),
        migrations.CreateModel(
            name='MechanicRequestForRepair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_send_time', models.DateTimeField(auto_now_add=True, verbose_name='Request Send Time')),
                ('start_time', models.DateTimeField(verbose_name='Start time')),
                ('end_time', models.DateTimeField(verbose_name='End time')),
                ('repair_duration', models.DurationField(blank=True, null=True, verbose_name='Repair duration')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='Status')),
                ('repair_requirements', models.TextField(verbose_name='Repair Requirements')),
                ('mechanic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mechanic_request', to='repair.mechanic', verbose_name='mechanic')),
                ('repair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repair_mechanic_request', to='repair.repair', verbose_name='repair')),
            ],
        ),
        migrations.CreateModel(
            name='RepairImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt', models.CharField(max_length=250, verbose_name='Alt')),
                ('images', models.ImageField(upload_to='RepairImages', verbose_name='Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('repair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_images_problem', to='repair.repair', verbose_name='Repair Images')),
            ],
        ),
    ]
